valid/expressions/equalsOverBool.wacc
calling the reference compiler on valid/expressions/equalsOverBool.wacc
-- Test: equalsOverBool.wacc

-- Uploaded file: 
---------------------------------------------------------------
# evaluating equality and boolean operator precedence

# Output:
# true
# false

# Program:

begin
  bool p = true ;
  bool q = true ;
  bool r = false ;
  bool s = true ;
  println p && q != r || s ;
  println (p && q) != (r || s)
end
---------------------------------------------------------------

-- Compiler Output:
-- Compiling...
-- Printing Assembly...
equalsOverBool.s contents are:
===========================================================
0	.data
1	
2	msg_0:
3		.word 5
4		.ascii	"true\0"
5	msg_1:
6		.word 6
7		.ascii	"false\0"
8	msg_2:
9		.word 1
10		.ascii	"\0"
11	
12	.text
13	
14	.global main
15	main:
16		PUSH {lr}
17		SUB sp, sp, #4
18		MOV r4, #1
19		STRB r4, [sp, #3]
20		MOV r4, #1
21		STRB r4, [sp, #2]
22		MOV r4, #0
23		STRB r4, [sp, #1]
24		MOV r4, #1
25		STRB r4, [sp]
26		LDRSB r4, [sp, #3]
27		LDRSB r5, [sp, #2]
28		LDRSB r6, [sp, #1]
29		CMP r5, r6
30		MOVNE r5, #1
31		MOVEQ r5, #0
32		AND r4, r4, r5
33		LDRSB r5, [sp]
34		ORR r4, r4, r5
35		MOV r0, r4
36		BL p_print_bool
37		BL p_print_ln
38		LDRSB r4, [sp, #3]
39		LDRSB r5, [sp, #2]
40		AND r4, r4, r5
41		LDRSB r5, [sp, #1]
42		LDRSB r6, [sp]
43		ORR r5, r5, r6
44		CMP r4, r5
45		MOVNE r4, #1
46		MOVEQ r4, #0
47		MOV r0, r4
48		BL p_print_bool
49		BL p_print_ln
50		ADD sp, sp, #4
51		LDR r0, =0
52		POP {pc}
53		.ltorg
54	p_print_bool:
55		PUSH {lr}
56		CMP r0, #0
57		LDRNE r0, =msg_0
58		LDREQ r0, =msg_1
59		ADD r0, r0, #4
60		BL printf
61		MOV r0, #0
62		BL fflush
63		POP {pc}
64	p_print_ln:
65		PUSH {lr}
66		LDR r0, =msg_2
67		ADD r0, r0, #4
68		BL puts
69		MOV r0, #0
70		BL fflush
71		POP {pc}
72	
===========================================================
-- Finished

