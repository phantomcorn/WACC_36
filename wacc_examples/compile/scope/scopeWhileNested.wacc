valid/scope/scopeWhileNested.wacc
calling the reference compiler on valid/scope/scopeWhileNested.wacc
-- Test: scopeWhileNested.wacc

-- Uploaded file: 
---------------------------------------------------------------
# variable scoping nested within a while-loop

# Output:
# counting... 5
# counting... 4
# counting... 3
# counting... 2
# counting... 1
# 0 Boom!

# Program:

begin
  int x = 5 ;
  while x > 0 do
    begin
      string x = "counting... " ;
      print x
    end ;
    println x ;
    x = x - 1
  done ;
  print x ;
  println " Boom!"
end

---------------------------------------------------------------

-- Compiler Output:
-- Compiling...
-- Printing Assembly...
scopeWhileNested.s contents are:
===========================================================
0	.data
1	
2	msg_0:
3		.word 12
4		.ascii	"counting... "
5	msg_1:
6		.word 6
7		.ascii	" Boom!"
8	msg_2:
9		.word 5
10		.ascii	"%.*s\0"
11	msg_3:
12		.word 3
13		.ascii	"%d\0"
14	msg_4:
15		.word 1
16		.ascii	"\0"
17	msg_5:
18		.word 83
19		.ascii	"OverflowError: the result is too small/large to store in a 4-byte signed-integer.\n\0"
20	
21	.text
22	
23	.global main
24	main:
25		PUSH {lr}
26		SUB sp, sp, #4
27		LDR r4, =5
28		STR r4, [sp]
29		B L0
30	L1:
31		SUB sp, sp, #4
32		LDR r4, =msg_0
33		STR r4, [sp]
34		LDR r4, [sp]
35		MOV r0, r4
36		BL p_print_string
37		ADD sp, sp, #4
38		LDR r4, [sp]
39		MOV r0, r4
40		BL p_print_int
41		BL p_print_ln
42		LDR r4, [sp]
43		LDR r5, =1
44		SUBS r4, r4, r5
45		BLVS p_throw_overflow_error
46		STR r4, [sp]
47	L0:
48		LDR r4, [sp]
49		LDR r5, =0
50		CMP r4, r5
51		MOVGT r4, #1
52		MOVLE r4, #0
53		CMP r4, #1
54		BEQ L1
55		LDR r4, [sp]
56		MOV r0, r4
57		BL p_print_int
58		LDR r4, =msg_1
59		MOV r0, r4
60		BL p_print_string
61		BL p_print_ln
62		ADD sp, sp, #4
63		LDR r0, =0
64		POP {pc}
65		.ltorg
66	p_print_string:
67		PUSH {lr}
68		LDR r1, [r0]
69		ADD r2, r0, #4
70		LDR r0, =msg_2
71		ADD r0, r0, #4
72		BL printf
73		MOV r0, #0
74		BL fflush
75		POP {pc}
76	p_print_int:
77		PUSH {lr}
78		MOV r1, r0
79		LDR r0, =msg_3
80		ADD r0, r0, #4
81		BL printf
82		MOV r0, #0
83		BL fflush
84		POP {pc}
85	p_print_ln:
86		PUSH {lr}
87		LDR r0, =msg_4
88		ADD r0, r0, #4
89		BL puts
90		MOV r0, #0
91		BL fflush
92		POP {pc}
93	p_throw_overflow_error:
94		LDR r0, =msg_5
95		BL p_throw_runtime_error
96	p_throw_runtime_error:
97		BL p_print_string
98		MOV r0, #-1
99		BL exit
100	
===========================================================
-- Finished

