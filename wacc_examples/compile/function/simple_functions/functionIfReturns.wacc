valid/function/simple_functions/functionIfReturns.wacc
calling the reference compiler on valid/function/simple_functions/functionIfReturns.wacc
-- Test: functionIfReturns.wacc

-- Uploaded file: 
---------------------------------------------------------------
# a simple function with nested returns inside an if-statement after a return

# Output:
# go
# 1

begin
    int f() is 
        println "go";
        return 1;
        if true then
            println "a";
            return 2
        else
            println "b";
            return 3
        fi
    end 

    int ret = call f();
    println ret
end
---------------------------------------------------------------

-- Compiler Output:
-- Compiling...
-- Printing Assembly...
functionIfReturns.s contents are:
===========================================================
0	.data
1	
2	msg_0:
3		.word 2
4		.ascii	"go"
5	msg_1:
6		.word 1
7		.ascii	"a"
8	msg_2:
9		.word 1
10		.ascii	"b"
11	msg_3:
12		.word 5
13		.ascii	"%.*s\0"
14	msg_4:
15		.word 1
16		.ascii	"\0"
17	msg_5:
18		.word 3
19		.ascii	"%d\0"
20	
21	.text
22	
23	.global main
24	f_f:
25		PUSH {lr}
26		LDR r4, =msg_0
27		MOV r0, r4
28		BL p_print_string
29		BL p_print_ln
30		LDR r4, =1
31		MOV r0, r4
32		POP {pc}
33		MOV r4, #1
34		CMP r4, #0
35		BEQ L0
36		LDR r4, =msg_1
37		MOV r0, r4
38		BL p_print_string
39		BL p_print_ln
40		LDR r4, =2
41		MOV r0, r4
42		POP {pc}
43		B L1
44	L0:
45		LDR r4, =msg_2
46		MOV r0, r4
47		BL p_print_string
48		BL p_print_ln
49		LDR r4, =3
50		MOV r0, r4
51		POP {pc}
52	L1:
53		POP {pc}
54		.ltorg
55	main:
56		PUSH {lr}
57		SUB sp, sp, #4
58		BL f_f
59		MOV r4, r0
60		STR r4, [sp]
61		LDR r4, [sp]
62		MOV r0, r4
63		BL p_print_int
64		BL p_print_ln
65		ADD sp, sp, #4
66		LDR r0, =0
67		POP {pc}
68		.ltorg
69	p_print_string:
70		PUSH {lr}
71		LDR r1, [r0]
72		ADD r2, r0, #4
73		LDR r0, =msg_3
74		ADD r0, r0, #4
75		BL printf
76		MOV r0, #0
77		BL fflush
78		POP {pc}
79	p_print_ln:
80		PUSH {lr}
81		LDR r0, =msg_4
82		ADD r0, r0, #4
83		BL puts
84		MOV r0, #0
85		BL fflush
86		POP {pc}
87	p_print_int:
88		PUSH {lr}
89		MOV r1, r0
90		LDR r0, =msg_5
91		ADD r0, r0, #4
92		BL printf
93		MOV r0, #0
94		BL fflush
95		POP {pc}
96	
===========================================================
-- Finished

